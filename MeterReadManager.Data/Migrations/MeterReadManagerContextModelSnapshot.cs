// <auto-generated />
using System;
using MeterReadManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeterReadManager.Data.Migrations
{
    [DbContext(typeof(MeterReadManagerContext))]
    partial class MeterReadManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeterReadManager.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptTerms = true,
                            Created = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Email = "Admin@hotmail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "$2a$11$cHlJvvDHx8AZhGkRBJZCGeUYSbllmnU8y5B9JlB/hj/QxPwRjlOOq",
                            PasswordReset = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            ResetToken = "C3B17085E1C1371B8875D1374FB96F3450F33E072ABD0C964444E62C0CA855800A118C8C7E7146CE",
                            ResetTokenExpires = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Role = 0,
                            Title = "Mr",
                            VerificationToken = "",
                            Verified = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AcceptTerms = true,
                            Created = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Email = "Customer@hotmail.com",
                            FirstName = "Customer",
                            LastName = "Customer",
                            PasswordHash = "$2a$11$cHlJvvDHx8AZhGkRBJZCGeUYSbllmnU8y5B9JlB/hj/QxPwRjlOOq",
                            PasswordReset = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            ResetToken = "C3B17085E1C1371B8875D1374FB96F3450F33E072ABD0C964444E62C0CA855800A118C8C7E7146CE",
                            ResetTokenExpires = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Role = 1,
                            Title = "Mr",
                            VerificationToken = "",
                            Verified = new DateTime(2023, 1, 1, 12, 39, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "England"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Northern Ireland"
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.County", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CountryId = 1,
                            Name = "West Yorkshire"
                        },
                        new
                        {
                            Id = (byte)2,
                            CountryId = 1,
                            Name = "North Yorkshire"
                        },
                        new
                        {
                            Id = (byte)3,
                            CountryId = 2,
                            Name = "Aberdeenshire"
                        },
                        new
                        {
                            Id = (byte)4,
                            CountryId = 2,
                            Name = "Ross and Cromarty"
                        },
                        new
                        {
                            Id = (byte)5,
                            CountryId = 3,
                            Name = "Breconshire"
                        },
                        new
                        {
                            Id = (byte)6,
                            CountryId = 3,
                            Name = "Gwynedd"
                        },
                        new
                        {
                            Id = (byte)7,
                            CountryId = 4,
                            Name = "Armagh"
                        },
                        new
                        {
                            Id = (byte)8,
                            CountryId = 4,
                            Name = "Londonderry"
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CityTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("CountyId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4505),
                            Address1 = "24 Long Road",
                            Address2 = "Carlton",
                            Address3 = "East Town",
                            CityTown = "Leeds",
                            CountyId = (byte)1,
                            Email = "jackie.jones@hotmail.com",
                            FirstName = "Jackie",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4555),
                            Postcode = "LS4 RH4",
                            Surname = "Jones"
                        },
                        new
                        {
                            Id = 2L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4561),
                            Address1 = "1 Catoral Close",
                            Address2 = "Grangestone",
                            Address3 = "Lower Baildon",
                            CityTown = "York",
                            CountyId = (byte)2,
                            Email = "ahmed.patel@hotmail.com",
                            FirstName = "Ahmed",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4562),
                            Postcode = "BD34 F45",
                            Surname = "Patel"
                        },
                        new
                        {
                            Id = 3L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4566),
                            Address1 = "143 Short Street",
                            Address2 = "Middleton",
                            CityTown = "Aberdeen",
                            CountyId = (byte)3,
                            Email = "tony.amos@@hotmail.com",
                            FirstName = "Tony",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4567),
                            Postcode = "AD6 CE3",
                            Surname = "Amos"
                        },
                        new
                        {
                            Id = 4L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4570),
                            Address1 = "28 Brush Lane",
                            Address2 = "West Town",
                            CityTown = "Inverurie",
                            CountyId = (byte)4,
                            Email = "jane.green@hotmail.com",
                            FirstName = "Jane",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4572),
                            Postcode = "RS3 NT5",
                            Surname = "Green"
                        },
                        new
                        {
                            Id = 5L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4575),
                            Address1 = "65 Carlton Avenue",
                            Address2 = "Cawley",
                            CityTown = "Hay-on-Wye",
                            CountyId = (byte)5,
                            Email = "keith.bernstien@hotmail.com",
                            FirstName = "Keith",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4576),
                            Postcode = "HY09 PL9",
                            Surname = "Bernstien"
                        },
                        new
                        {
                            Id = 6L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4580),
                            Address1 = "36 Mixen Lane",
                            Address2 = "Soothill",
                            CityTown = "Brecon",
                            CountyId = (byte)6,
                            Email = "jenny.harper@hotmail.com",
                            FirstName = "Jenny",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4582),
                            Postcode = "BR2 KB2",
                            Surname = "Harper"
                        },
                        new
                        {
                            Id = 7L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4585),
                            Address1 = "5 Margton Street",
                            Address2 = "Niverton",
                            CityTown = "Bannfoot",
                            CountyId = (byte)7,
                            Email = "sandy.denny@hotmail.com",
                            FirstName = "Sandy",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4586),
                            Postcode = "BN6 CG5",
                            Surname = "Denny"
                        },
                        new
                        {
                            Id = 8L,
                            AddedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4589),
                            Address1 = "84 Hollow Avenue",
                            Address2 = "Overton",
                            CityTown = "Bessbrook",
                            CountyId = (byte)8,
                            Email = "brian.opsoto@hotmail.com",
                            FirstName = "Brian",
                            ModifiedDate = new DateTime(2023, 4, 1, 12, 46, 42, 209, DateTimeKind.Local).AddTicks(4591),
                            Postcode = "BN1 SC3",
                            Surname = "Opsoto"
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.Meter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MeterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("MeterTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MeterTypeId");

                    b.ToTable("Meters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 1L,
                            Location = "1 Main Street, Laoth",
                            MeterNumber = "234378901",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 2L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 1L,
                            Location = "2 Main Street, Laoth",
                            MeterNumber = "234378902",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 3L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 1L,
                            Location = "3 Main Street, Laoth",
                            MeterNumber = "234378903",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 4L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 1L,
                            Location = "4 Main Street, Laoth",
                            MeterNumber = "234378904",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 5L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 2L,
                            Location = "1 Main Street, Laoth",
                            MeterNumber = "426565605",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 6L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 2L,
                            Location = "2 Main Street, Laoth",
                            MeterNumber = "426565606",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 7L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 2L,
                            Location = "3 Main Street, Laoth",
                            MeterNumber = "426565607",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 8L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 2L,
                            Location = "4 Main Street, Laoth",
                            MeterNumber = "426565608",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 9L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 3L,
                            Location = "1 Main Street, Laoth",
                            MeterNumber = "542356015",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 10L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 3L,
                            Location = "2 Main Street, Laoth",
                            MeterNumber = "683534603",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 11L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 3L,
                            Location = "3 Main Street, Laoth",
                            MeterNumber = "823234647",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 12L,
                            AccountId = 2L,
                            Active = false,
                            CustomerId = 3L,
                            Location = "4 Main Street, Laoth",
                            MeterNumber = "453459768",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 13L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 4L,
                            Location = "10 Lower Lane, Heaton",
                            MeterNumber = "956756343",
                            MeterTypeId = 4
                        },
                        new
                        {
                            Id = 14L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 4L,
                            Location = "11 Lower Lane, Heaton",
                            MeterNumber = "956756344",
                            MeterTypeId = 4
                        },
                        new
                        {
                            Id = 15L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 4L,
                            Location = "12 Lower Lane, Heaton",
                            MeterNumber = "956756345",
                            MeterTypeId = 4
                        },
                        new
                        {
                            Id = 16L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 4L,
                            Location = "13 Lower Lane, Heaton",
                            MeterNumber = "956756346",
                            MeterTypeId = 4
                        },
                        new
                        {
                            Id = 17L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 5L,
                            Location = "14 Marlon Lane, Larchfield",
                            MeterNumber = "532787542",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 18L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 5L,
                            Location = "15 Marlon Lane, Larchfield",
                            MeterNumber = "532787548",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 19L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 5L,
                            Location = "16 Marlon Lane, Larchfield",
                            MeterNumber = "532787549",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 20L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 5L,
                            Location = "17 Marlon Lane, Larchfield",
                            MeterNumber = "532787545",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 21L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 6L,
                            Location = "18 Jones Close, Kilton",
                            MeterNumber = "532787345",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 22L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 6L,
                            Location = "19 Jones Close, Kilton",
                            MeterNumber = "532784567",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 23L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 6L,
                            Location = "20 Jones Close, Kilton",
                            MeterNumber = "532781144",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 24L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 6L,
                            Location = "21 Jones Close, Kilton",
                            MeterNumber = "532783474",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 25L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 7L,
                            Location = "38 Derby Street, Milton",
                            MeterNumber = "153397451",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 26L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 7L,
                            Location = "42 Derby Street, Milton",
                            MeterNumber = "153397450",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 27L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 7L,
                            Location = "53 Derby Street, Milton",
                            MeterNumber = "153397454",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 28L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 7L,
                            Location = "62 Derby Street, Milton",
                            MeterNumber = "153397458",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 29L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 8L,
                            Location = "118 Harly Avenue, Olton",
                            MeterNumber = "812234863",
                            MeterTypeId = 3
                        },
                        new
                        {
                            Id = 30L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 8L,
                            Location = "119 Harly Avenue, Olton",
                            MeterNumber = "812234236",
                            MeterTypeId = 2
                        },
                        new
                        {
                            Id = 31L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 8L,
                            Location = "120 Harly Avenue, Olton",
                            MeterNumber = "812234908",
                            MeterTypeId = 1
                        },
                        new
                        {
                            Id = 32L,
                            AccountId = 3L,
                            Active = false,
                            CustomerId = 8L,
                            Location = "121 Harly Avenue, Olton",
                            MeterNumber = "812234631",
                            MeterTypeId = 3
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.MeterReading", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("MeterId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MeterReadings");
                });

            modelBuilder.Entity("MeterReadManager.Domain.MeterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("MeterTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gas/Electric"
                        });
                });

            modelBuilder.Entity("MeterReadManager.Domain.ReadingLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("MeterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("MeterReadStatus")
                        .HasColumnType("bit");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeterId");

                    b.ToTable("ReadingLogs");
                });

            modelBuilder.Entity("MeterReadManager.Domain.Account", b =>
                {
                    b.OwnsMany("MeterReadManager.Domain.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("AccountId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("AccountId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("Account")
                                .HasForeignKey("AccountId");

                            b1.Navigation("Account");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("MeterReadManager.Domain.County", b =>
                {
                    b.HasOne("MeterReadManager.Domain.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MeterReadManager.Domain.Customer", b =>
                {
                    b.HasOne("MeterReadManager.Domain.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("County");
                });

            modelBuilder.Entity("MeterReadManager.Domain.Meter", b =>
                {
                    b.HasOne("MeterReadManager.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeterReadManager.Domain.MeterType", "MeterType")
                        .WithMany()
                        .HasForeignKey("MeterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("MeterType");
                });

            modelBuilder.Entity("MeterReadManager.Domain.ReadingLog", b =>
                {
                    b.HasOne("MeterReadManager.Domain.Meter", "Meter")
                        .WithMany()
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meter");
                });
#pragma warning restore 612, 618
        }
    }
}
